Acknowledges a pull task.

<p>The worker, that is, the entity that
[leased][google.cloud.tasks.v2beta2.CloudTasks.LeaseTasks] this task must call this method to
indicate that the work associated with the task has finished.

<p>The worker must acknowledge a task within the
[lease_duration][google.cloud.tasks.v2beta2.LeaseTasksRequest.lease_duration] or the lease will
expire and the task will become available to be leased again. After the task is acknowledged,
it will not be returned by a later
[LeaseTasks][google.cloud.tasks.v2beta2.CloudTasks.LeaseTasks],
[GetTask][google.cloud.tasks.v2beta2.CloudTasks.GetTask], or
[ListTasks][google.cloud.tasks.v2beta2.CloudTasks.ListTasks].

<p>Sample code:

<pre><code>
try (CloudTasksClient cloudTasksClient = CloudTasksClient.create()) {
TaskName name = TaskName.of("[PROJECT]", "[LOCATION]", "[QUEUE]", "[TASK]");
Timestamp scheduleTime = Timestamp.newBuilder().build();
cloudTasksClient.acknowledgeTask(name.toString(), scheduleTime);
}
</code></pre>

@param name Required.
<p>The task name. For example:
`projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID`
@param scheduleTime Required.
<p>The task's current schedule time, available in the
[schedule_time][google.cloud.tasks.v2beta2.Task.schedule_time] returned by
[LeaseTasks][google.cloud.tasks.v2beta2.CloudTasks.LeaseTasks] response or
[RenewLease][google.cloud.tasks.v2beta2.CloudTasks.RenewLease] response. This restriction
is to ensure that your worker currently holds the lease.
@throws com.google.api.gax.rpc.ApiException if the remote call fails